React.JS
	a JS Library used for UI
	Started by Facebook
	Maintained by Facebook and Instagram
	Is a View - the V in MVC
	For developing single page applications

Virtual Dom
	Is a JS Object
	Faster than Real DOM
	Only writes to real dom when necessary
	Only renders data that has been changed 
		This is unlike DOM which must render all data
		This is why the DOM is so slow
	Get state info from the virtual DOM with getDOMNode()

Using React
	Click on download link on the React website
	Find the "Production" script tag (currently v.0.13.3)
	Insert into document head
	React.Render() starts any piece of react code

	React.Render(React.CreateElement('div', null, 'hello world'), document.body);
		This code will create a div element with no properties that says
		hellow world inside of the document body.

	React.createElement(what, properties, content);

JSX
	JSX - Javascript XML
	Makes code similar to XML
	Must first be converted to Javascript before it will run in the browser.

Babel
	JS Compiler
	http://www.babeljs.io
	Use v.5.8 for now - it's Quicker!
	Link in Script tag in header
	Give React Code Script a type of text/babel 
		- <script type="text/babel">
	

Using JSX
	var HelloWord = React.createClass({
		Render: function(){
			return{
				<div>
					<h1>hello world</h1>
				</div>
				);
				}
			});

	React.render(<helloworld/>, document.body);

	Notice that var name is called in XML style
	HTML is returned and rendered to the body


How to tell if a page is using React
	React compnents are compostable.
		UI comprised of different components.
	Any website built with react has the react logo on the right side of teh address bar.
	You can open a react developer panel
		Opens in the same way you would inspect an element
		This will tell you where on the page react is being used.

Creating a React Component
	React.Render can only return one compnent at a time unless wrapped inside of a container
	ex:
		React.Render(<div>
					<helloworld/>
					<helloworld/>
					<helloworld/>
				</div>, document.body);

Properties
	Sending properties to a compnent in a similar to adding some attributes to HTML
	this.props.(var name)
		how you would call your function ft. the defined var.

		ex:
		<helloworld text="stuffandthings"/>
		<h1>{this.props.text}</h1>

		This would create an h1 saying stuff and things".


Other Notes:
	When declaring functions within a class you do not need to declare a var
		Syntax similar to backbone
	Instead of declaring a class, declare a className
	JQuery can be used inside of obejcts.
	ex:
		<button onClick={this.Remove} className="btn">

Checkboxes
	var checkbox = React.createClass({
					getInitialState: function({
								  return {checked:false}
								  }. //checkbox is unchecked at start
								  handleCheck:function(){
											this.setState({checked:!this.state.checked})
											},
										Render: function(){
												  var msg;
											if(this.state.checked){
													      msg = "checked";
													      }
													       else
													      {
     														 msg = "unchecked";
      													      }
														return(<div><input type="checkbox" onChange={this.handleCheck}/><p>{msg}</p></div>);
													      
												   }
												});

State
	When a component state changes, Render is called to Rerender that change
	Think of a checkbox - has 2 states
		checked
		unchecked
	This.setState ~ primary way to trigger an ui updates from event handlers


Parent/Child Relationships
	getDOMNode() looks for the value of whatever it is attached to
	Refs are a reliable way to access the properties of DOM
		Can also be used to flow data to a child component
	PropTypes ~ a method in the React Library used to handle validation
		ex:
			if (typeof props[propname] !== "number")
			{
				return new error('Must be a number!");
			}

		This is an example of validation in react.
	To populate from an array, use the .map method
		The key will be i or some other placeholder
	Child components can inherit state and props
	arr.splice still removes items in an array
	arr.push still adds items to an array
	if adding items, use .bind(null, "text") for
	a placeholder. Otherwise it will default to object.
	Key properties are passed to components when its part of an array of children.
	React decides what to rerender based on ids.
	Components have unique keys to maintain their state and identity.


Random Numbers
	Takes two arguments
		min
		max
	(min + Math.Ciel(Math.Random() + max));
	For ids:
		this.uniqueid = this.uniqueid || 0;
		uniqueid++;			


Component Life Cycle:
	The times at which changes in state will occur during a components lifetime.
	React provides hooks for creating, lifetime, and teardown of a component.
	getdefaultprops and getinitialstate are called once, set defaults for props and state respectively
	
	ComponentWillMount ~ Last chance to affect the state prior to render
	ComponentWillReceiveProps ~ changes the obj, update state
	ShouldComponentUpdate and ComponentWillUpdate ~ used to enhance performance.
	ComponentWillUnmount ~ Clean up DOM and invalidate timers
	React.UnmountComponentAtNode('location');

Passing in CSS:
	Return an Object
	Continue as normal CSS
		Camelcase instead of hyphens
		Commas instead of semicolons
		No pixel values are necessary
	Style = {this.props}
	React is better than css because it is reusable
		No need to share ids or classes
	React plays well with jquery

NPM
	the package manager for node.js
	includes pacakge.json file *
	in terimal:
		type npm init + fill out
	Creates a new package.json file
	in terminal:
		npm install --save-dev babel-cli@6.4.0
		npm install --save-dev babel-preset-React
	
	Back in package.json
		Should have 2 new dev dependencies
			babel-cli
			babel-preset-react

		erase "test" + replace with "build"
		erase following text and replace with "babel js -d built"
		add a node called "babel"  this is an object
			"presets": ["react"]
	In terminal:
		npm install --save httpster
			should show up in package.json
		npm run build
	In package.json
		Under "build"
			"start":"open http://localhost:3000 + httpster -p 3000"
	In terminal:
		npm start
			opens app in browser

Other libraries
	Babel documentation
	Webpack
		Most popular tool used with react
		Create a config file defining steps to take prior to launch
	Grunt
		A task runner
		Automates necessary processes
	React Native
	Flux
		NOT MVC
